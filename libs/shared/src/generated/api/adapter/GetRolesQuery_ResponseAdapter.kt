//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package api.adapter

import api.GetRolesQuery
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object GetRolesQuery_ResponseAdapter {
  public object Data : Adapter<GetRolesQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("roles")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRolesQuery.Data {
      var _roles: GetRolesQuery.Roles? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _roles = Roles.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetRolesQuery.Data(
        roles = _roles!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRolesQuery.Data,
    ): Unit {
      writer.name("roles")
      Roles.obj().toJson(writer, customScalarAdapters, value.roles)
    }
  }

  public object Roles : Adapter<GetRolesQuery.Roles> {
    public val RESPONSE_NAMES: List<String> = listOf("pageInfo", "edges")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRolesQuery.Roles {
      var _pageInfo: GetRolesQuery.PageInfo? = null
      var _edges: List<GetRolesQuery.Edge?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _pageInfo = PageInfo.obj(true).fromJson(reader, customScalarAdapters)
          1 -> _edges = Edge.obj().nullable().list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetRolesQuery.Roles(
        pageInfo = _pageInfo!!,
        edges = _edges!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRolesQuery.Roles,
    ): Unit {
      writer.name("pageInfo")
      PageInfo.obj(true).toJson(writer, customScalarAdapters, value.pageInfo)

      writer.name("edges")
      Edge.obj().nullable().list().toJson(writer, customScalarAdapters, value.edges)
    }
  }

  public object PageInfo : Adapter<GetRolesQuery.PageInfo> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRolesQuery.PageInfo {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _pageInfo = api.fragment.PageInfoImpl_ResponseAdapter.PageInfo.fromJson(reader,
          customScalarAdapters)

      return GetRolesQuery.PageInfo(
        __typename = __typename!!,
        pageInfo = _pageInfo
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRolesQuery.PageInfo,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      api.fragment.PageInfoImpl_ResponseAdapter.PageInfo.toJson(writer, customScalarAdapters,
          value.pageInfo)
    }
  }

  public object Edge : Adapter<GetRolesQuery.Edge> {
    public val RESPONSE_NAMES: List<String> = listOf("cursor", "node")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRolesQuery.Edge {
      var _cursor: String? = null
      var _node: GetRolesQuery.Node? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _cursor = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _node = Node.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetRolesQuery.Edge(
        cursor = _cursor!!,
        node = _node!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRolesQuery.Edge,
    ): Unit {
      writer.name("cursor")
      StringAdapter.toJson(writer, customScalarAdapters, value.cursor)

      writer.name("node")
      Node.obj().toJson(writer, customScalarAdapters, value.node)
    }
  }

  public object Node : Adapter<GetRolesQuery.Node> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "name", "description", "permissions")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRolesQuery.Node {
      var _id: String? = null
      var _name: String? = null
      var _description: String? = null
      var _permissions: List<GetRolesQuery.Permission>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _description = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _permissions = Permission.obj(true).list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetRolesQuery.Node(
        id = _id,
        name = _name!!,
        description = _description,
        permissions = _permissions!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRolesQuery.Node,
    ): Unit {
      writer.name("id")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("description")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.description)

      writer.name("permissions")
      Permission.obj(true).list().toJson(writer, customScalarAdapters, value.permissions)
    }
  }

  public object Permission : Adapter<GetRolesQuery.Permission> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRolesQuery.Permission {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _permission = api.fragment.PermissionImpl_ResponseAdapter.Permission.fromJson(reader,
          customScalarAdapters)

      return GetRolesQuery.Permission(
        __typename = __typename!!,
        permission = _permission
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRolesQuery.Permission,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      api.fragment.PermissionImpl_ResponseAdapter.Permission.toJson(writer, customScalarAdapters,
          value.permission)
    }
  }
}
