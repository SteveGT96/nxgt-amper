//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package api

import api.adapter.GetPermissionByIdQuery_ResponseAdapter
import api.adapter.GetPermissionByIdQuery_VariablesAdapter
import api.selections.GetPermissionByIdQuerySelections
import api.type.QueryBuilder
import api.type.__CustomScalarAdapters
import api.type.__Schema
import api.type.buildQuery
import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.DefaultFakeResolver
import com.apollographql.apollo3.api.FakeResolver
import com.apollographql.apollo3.api.GlobalBuilder
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.buildData
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import kotlin.String
import kotlin.Unit

public data class GetPermissionByIdQuery(
  public val id: String,
) : Query<GetPermissionByIdQuery.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    GetPermissionByIdQuery_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = GetPermissionByIdQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = api.type.Query.type
  )
  .selections(selections = GetPermissionByIdQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(GetPermissionByIdQuery_ResponseAdapter.Data::class)
  public data class Data(
    /**
     * Get a permission by ID.
     */
    public val permission: Permission,
  ) : Query.Data

  public data class Permission(
    /**
     * The unique identifier of the permission.
     */
    public val id: String?,
    /**
     * The name of the permission.
     */
    public val name: String,
    /**
     * The description of the permission.
     */
    public val description: String?,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "7365e412364ff96f97325f48c6925a6a56f93b3e8e657e49c2fa78019f3dc273"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query GetPermissionById($id: ID!) {
     *   permission(id: $id) {
     *     id
     *     name
     *     description
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query GetPermissionById(${'$'}id: ID!) { permission(id: ${'$'}id) { id name description } }"

    public const val OPERATION_NAME: String = "GetPermissionById"

    public fun Data(resolver: FakeResolver = DefaultFakeResolver(__Schema.all),
        block: QueryBuilder.() -> Unit = {}): Data = buildData(
      GetPermissionByIdQuery_ResponseAdapter.Data,
      GetPermissionByIdQuerySelections.__root,
      "Query",
      GlobalBuilder.buildQuery(block),
      resolver,
      __CustomScalarAdapters,
    )
  }
}
