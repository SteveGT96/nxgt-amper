//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package api.adapter

import api.GetRoleByIdQuery
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object GetRoleByIdQuery_ResponseAdapter {
  public object Data : Adapter<GetRoleByIdQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("role")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRoleByIdQuery.Data {
      var _role: GetRoleByIdQuery.Role? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _role = Role.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetRoleByIdQuery.Data(
        role = _role!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRoleByIdQuery.Data,
    ): Unit {
      writer.name("role")
      Role.obj().toJson(writer, customScalarAdapters, value.role)
    }
  }

  public object Role : Adapter<GetRoleByIdQuery.Role> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "name", "description", "permissions")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRoleByIdQuery.Role {
      var _id: String? = null
      var _name: String? = null
      var _description: String? = null
      var _permissions: List<GetRoleByIdQuery.Permission>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _description = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _permissions = Permission.obj(true).list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetRoleByIdQuery.Role(
        id = _id,
        name = _name!!,
        description = _description,
        permissions = _permissions!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRoleByIdQuery.Role,
    ): Unit {
      writer.name("id")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("description")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.description)

      writer.name("permissions")
      Permission.obj(true).list().toJson(writer, customScalarAdapters, value.permissions)
    }
  }

  public object Permission : Adapter<GetRoleByIdQuery.Permission> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRoleByIdQuery.Permission {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _permission = api.fragment.PermissionImpl_ResponseAdapter.Permission.fromJson(reader,
          customScalarAdapters)

      return GetRoleByIdQuery.Permission(
        __typename = __typename!!,
        permission = _permission
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRoleByIdQuery.Permission,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      api.fragment.PermissionImpl_ResponseAdapter.Permission.toJson(writer, customScalarAdapters,
          value.permission)
    }
  }
}
